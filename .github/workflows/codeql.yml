# Tiggit/.github/workflows/codeql.yml: GitHub Actions codeql workflow for Tiggit
# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL"

on:
  push:
    branches: [ "master" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "master" ]
  schedule:
    - cron: '45 11 * * 1'

jobs:
  analyze:
    name: Analyze
    # Runner size impacts CodeQL analysis time. To learn more, please see:
    #   - https://gh.io/recommended-hardware-resources-for-running-codeql
    #   - https://gh.io/supported-runners-and-hardware-resources
    #   - https://gh.io/using-larger-runners
    # Consider using larger runners for possible analysis time improvements.
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'c-cpp' ]
        # CodeQL supports [ 'c-cpp', 'csharp', 'go', 'java-kotlin', 'javascript-typescript', 'python', 'ruby', 'swift' ]
        # Use only 'java-kotlin' to analyze code written in Java, Kotlin or both
        # Use only 'javascript-typescript' to analyze code written in JavaScript, TypeScript or both
        # Learn more about CodeQL language support at:
        # https://aka.ms/codeql-docs/language-support

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.

        # For more details on CodeQL's query packs, refer to:
        # https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
        # queries: security-extended,security-and-quality

    - name: Dependencies
      run: |
        sudo apt-get -qq update
        sudo apt-get -q install libwxbase3.0-0v5 libwxgtk3.0-gtk3-0v5 codeblocks filezilla cmake libzzip-dev libdbus-1-dev libxi-dev libxtst-dev linux-libc-dev libx11-dev libxft-dev libxext-dev libgles2-mesa-dev gtk+3.0 x11-xserver-utils libxkbcommon-dev libxkbcommon0 libxkbcommon-x11-0 libxkbcommon-x11-dev libxkbcommon-tools gettext cairo-5c libcairo-5c0 libcairo1.10-cil lxrandr openssl curl libharfbuzz-dev pango1.0 xdg-desktop-portal-gnome xinput xserver-xorg-video-r128 debhelper libglib2.0-dev xserver-xorg xserver-xorg-core xserver-xorg-legacy libxrandr2 build-essential gcc g++ python3-distutils pkg-config ninja-build bison gperf nasm libgl1-mesa-dev libglu1-mesa-dev libtool libudev-dev libx11-xcb-dev libxcursor-dev libxdamage-dev libxinerama-dev libxrandr-dev libwayland-dev libegl1-mesa-dev libibus-1.0-dev libcurl4-openssl-dev
        exit 1
        sudo apt-get autoclean && sudo apt-get clean
        if test -x "$(which snap)"; then \
          echo "attempting to use $(which snap) to install some wxwidgets-related things..."; \
          sudo snap install wxdatecalc wxdatefrom; \
        fi

    - name: Cache object files
      id: vcpkg-cache
      uses: actions/cache@v3
      with:
        path: vcpkg_installed  # vcpkg generates this dir next to vcpkg.json
        # the final key part needs to be changed if anything in the build process changes that is not already included here
        key: vcpkg-cache-master-${{ hashFiles('.github/workflows/codeql.yml') }}-${{ hashFiles('CMakeLists.txt') }}-0001

    - name: More dependencies
      run: |
        vcpkg update
        vcpkg x-ci-clean
        vcpkg install wxwidgets
        vcpkg x-ci-clean
      env:
        VCPKG_FORCE_SYSTEM_BINARIES: 1
        CMAKE_BUILD_TYPE: MinSizeRel
        VCPKG_KEEP_ENV_VARS: CMAKE_BUILD_TYPE

    # Autobuild attempts to build any compiled languages (C/C++, C#, Go, Java, or Swift).
    # If this step fails, then you should remove it and run the build manually (see below)
    - name: Autobuild
      uses: github/codeql-action/autobuild@v2
      env:
        VCPKG_FEATURE_FLAGS: dependencygraph

    # Command-line programs to run using the OS shell.
    # See:
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun

    #   If the Autobuild fails above, remove it and uncomment the following three lines.
    #   modify them (or add more) to build your code if your project, please refer to the EXAMPLE below for guidance.

    # - run: |
    #     echo "Run, Build Application using script"
    #     ./location_of_script_within_repo/buildscript.sh

    - name: Debug failure
      if: failure()
      run: |
        # shellcheck disable=SC2038
        if test -d /usr/local/share/vcpkg/buildtrees/wxwidgets; then \
          echo "Seeing if wxwidgets had a build failure under vcpkg..."; \
          find /usr/local/share/vcpkg/buildtrees/wxwidgets -name "*.log" | xargs cat | uniq; \
        fi
        if test -r CMakeFiles/CMakeOutput.log; then \
          cat CMakeFiles/CMakeOutput.log || stat CMakeFiles/CMakeOutput.log; \
        fi
        if test -r CMakeFiles/CMakeError.log; then \
          cat CMakeFiles/CMakeError.log || stat CMakeFiles/CMakeError.log; \
        fi
        du / 2>/dev/null || df

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"
